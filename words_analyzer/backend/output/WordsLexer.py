# Generated from Words.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,367,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,3,0,97,8,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,3,2,210,8,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,342,8,3,1,4,4,4,345,8,4,
        11,4,12,4,346,1,5,4,5,350,8,5,11,5,12,5,351,1,6,1,6,1,7,4,7,357,
        8,7,11,7,12,7,358,1,8,3,8,362,8,8,1,8,1,8,3,8,366,8,8,0,0,9,1,1,
        3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,1,0,4,14,0,65,90,97,122,193,
        193,201,201,205,205,209,209,211,211,218,218,225,225,233,233,237,
        237,241,241,243,243,250,250,1,0,48,57,7,0,33,33,44,44,46,46,59,59,
        63,63,161,161,191,191,2,0,9,9,32,32,418,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,1,96,1,0,0,0,3,98,1,0,0,0,5,209,1,0,0,0,
        7,341,1,0,0,0,9,344,1,0,0,0,11,349,1,0,0,0,13,353,1,0,0,0,15,356,
        1,0,0,0,17,365,1,0,0,0,19,20,5,69,0,0,20,21,5,110,0,0,21,22,5,101,
        0,0,22,23,5,114,0,0,23,97,5,111,0,0,24,25,5,70,0,0,25,26,5,101,0,
        0,26,27,5,98,0,0,27,28,5,114,0,0,28,29,5,101,0,0,29,30,5,114,0,0,
        30,97,5,111,0,0,31,32,5,77,0,0,32,33,5,97,0,0,33,34,5,114,0,0,34,
        35,5,122,0,0,35,97,5,111,0,0,36,37,5,65,0,0,37,38,5,98,0,0,38,39,
        5,114,0,0,39,40,5,105,0,0,40,97,5,108,0,0,41,42,5,77,0,0,42,43,5,
        97,0,0,43,44,5,121,0,0,44,97,5,111,0,0,45,46,5,74,0,0,46,47,5,117,
        0,0,47,48,5,110,0,0,48,49,5,105,0,0,49,97,5,111,0,0,50,51,5,74,0,
        0,51,52,5,117,0,0,52,53,5,108,0,0,53,54,5,105,0,0,54,97,5,111,0,
        0,55,56,5,65,0,0,56,57,5,103,0,0,57,58,5,111,0,0,58,59,5,115,0,0,
        59,60,5,116,0,0,60,97,5,111,0,0,61,62,5,83,0,0,62,63,5,101,0,0,63,
        64,5,112,0,0,64,65,5,116,0,0,65,66,5,105,0,0,66,67,5,101,0,0,67,
        68,5,109,0,0,68,69,5,98,0,0,69,70,5,114,0,0,70,97,5,101,0,0,71,72,
        5,79,0,0,72,73,5,99,0,0,73,74,5,116,0,0,74,75,5,117,0,0,75,76,5,
        98,0,0,76,77,5,114,0,0,77,97,5,101,0,0,78,79,5,78,0,0,79,80,5,111,
        0,0,80,81,5,118,0,0,81,82,5,105,0,0,82,83,5,101,0,0,83,84,5,109,
        0,0,84,85,5,98,0,0,85,86,5,114,0,0,86,97,5,101,0,0,87,88,5,68,0,
        0,88,89,5,105,0,0,89,90,5,99,0,0,90,91,5,105,0,0,91,92,5,101,0,0,
        92,93,5,109,0,0,93,94,5,98,0,0,94,95,5,114,0,0,95,97,5,101,0,0,96,
        19,1,0,0,0,96,24,1,0,0,0,96,31,1,0,0,0,96,36,1,0,0,0,96,41,1,0,0,
        0,96,45,1,0,0,0,96,50,1,0,0,0,96,55,1,0,0,0,96,61,1,0,0,0,96,71,
        1,0,0,0,96,78,1,0,0,0,96,87,1,0,0,0,97,2,1,0,0,0,98,99,5,58,0,0,
        99,4,1,0,0,0,100,101,5,78,0,0,101,102,5,97,0,0,102,103,5,114,0,0,
        103,104,5,97,0,0,104,105,5,110,0,0,105,106,5,106,0,0,106,210,5,97,
        0,0,107,108,5,77,0,0,108,109,5,97,0,0,109,110,5,110,0,0,110,111,
        5,100,0,0,111,112,5,97,0,0,112,113,5,114,0,0,113,114,5,105,0,0,114,
        115,5,110,0,0,115,210,5,97,0,0,116,117,5,84,0,0,117,118,5,111,0,
        0,118,119,5,114,0,0,119,120,5,111,0,0,120,121,5,110,0,0,121,122,
        5,106,0,0,122,210,5,97,0,0,123,124,5,70,0,0,124,125,5,114,0,0,125,
        126,5,101,0,0,126,127,5,115,0,0,127,210,5,97,0,0,128,129,5,71,0,
        0,129,130,5,117,0,0,130,131,5,97,0,0,131,132,5,121,0,0,132,133,5,
        97,0,0,133,134,5,98,0,0,134,210,5,97,0,0,135,136,5,76,0,0,136,137,
        5,105,0,0,137,138,5,109,0,0,138,139,5,243,0,0,139,210,5,110,0,0,
        140,141,5,80,0,0,141,142,5,105,0,0,142,143,5,241,0,0,143,210,5,97,
        0,0,144,145,5,77,0,0,145,146,5,97,0,0,146,147,5,110,0,0,147,148,
        5,103,0,0,148,210,5,111,0,0,149,150,5,80,0,0,150,151,5,97,0,0,151,
        152,5,112,0,0,152,153,5,97,0,0,153,154,5,121,0,0,154,210,5,97,0,
        0,155,156,5,77,0,0,156,157,5,101,0,0,157,158,5,108,0,0,158,159,5,
        243,0,0,159,210,5,110,0,0,160,161,5,83,0,0,161,162,5,97,0,0,162,
        163,5,110,0,0,163,164,5,100,0,0,164,165,5,237,0,0,165,210,5,97,0,
        0,166,167,5,67,0,0,167,168,5,105,0,0,168,169,5,114,0,0,169,170,5,
        117,0,0,170,171,5,101,0,0,171,172,5,108,0,0,172,210,5,97,0,0,173,
        174,5,68,0,0,174,175,5,117,0,0,175,176,5,114,0,0,176,177,5,97,0,
        0,177,178,5,122,0,0,178,179,5,110,0,0,179,210,5,111,0,0,180,181,
        5,72,0,0,181,182,5,105,0,0,182,183,5,103,0,0,183,210,5,111,0,0,184,
        185,5,80,0,0,185,186,5,101,0,0,186,187,5,114,0,0,187,210,5,97,0,
        0,188,189,5,84,0,0,189,190,5,117,0,0,190,191,5,110,0,0,191,210,5,
        97,0,0,192,193,5,77,0,0,193,194,5,97,0,0,194,195,5,110,0,0,195,196,
        5,122,0,0,196,197,5,97,0,0,197,198,5,110,0,0,198,210,5,97,0,0,199,
        200,5,85,0,0,200,201,5,118,0,0,201,210,5,97,0,0,202,203,5,71,0,0,
        203,204,5,114,0,0,204,205,5,97,0,0,205,206,5,110,0,0,206,207,5,97,
        0,0,207,208,5,100,0,0,208,210,5,97,0,0,209,100,1,0,0,0,209,107,1,
        0,0,0,209,116,1,0,0,0,209,123,1,0,0,0,209,128,1,0,0,0,209,135,1,
        0,0,0,209,140,1,0,0,0,209,144,1,0,0,0,209,149,1,0,0,0,209,155,1,
        0,0,0,209,160,1,0,0,0,209,166,1,0,0,0,209,173,1,0,0,0,209,180,1,
        0,0,0,209,184,1,0,0,0,209,188,1,0,0,0,209,192,1,0,0,0,209,199,1,
        0,0,0,209,202,1,0,0,0,210,6,1,0,0,0,211,212,5,78,0,0,212,213,5,97,
        0,0,213,214,5,114,0,0,214,215,5,97,0,0,215,216,5,110,0,0,216,217,
        5,106,0,0,217,218,5,97,0,0,218,342,5,115,0,0,219,220,5,77,0,0,220,
        221,5,97,0,0,221,222,5,110,0,0,222,223,5,100,0,0,223,224,5,97,0,
        0,224,225,5,114,0,0,225,226,5,105,0,0,226,227,5,110,0,0,227,228,
        5,97,0,0,228,342,5,115,0,0,229,230,5,84,0,0,230,231,5,111,0,0,231,
        232,5,114,0,0,232,233,5,111,0,0,233,234,5,110,0,0,234,235,5,106,
        0,0,235,236,5,97,0,0,236,342,5,115,0,0,237,238,5,70,0,0,238,239,
        5,114,0,0,239,240,5,101,0,0,240,241,5,115,0,0,241,242,5,97,0,0,242,
        342,5,115,0,0,243,244,5,71,0,0,244,245,5,117,0,0,245,246,5,97,0,
        0,246,247,5,121,0,0,247,248,5,97,0,0,248,249,5,98,0,0,249,250,5,
        97,0,0,250,342,5,115,0,0,251,252,5,76,0,0,252,253,5,105,0,0,253,
        254,5,109,0,0,254,255,5,111,0,0,255,256,5,110,0,0,256,257,5,101,
        0,0,257,342,5,115,0,0,258,259,5,80,0,0,259,260,5,105,0,0,260,261,
        5,241,0,0,261,262,5,97,0,0,262,342,5,115,0,0,263,264,5,77,0,0,264,
        265,5,97,0,0,265,266,5,110,0,0,266,267,5,103,0,0,267,268,5,111,0,
        0,268,342,5,115,0,0,269,270,5,80,0,0,270,271,5,97,0,0,271,272,5,
        112,0,0,272,273,5,97,0,0,273,274,5,121,0,0,274,275,5,97,0,0,275,
        342,5,115,0,0,276,277,5,77,0,0,277,278,5,101,0,0,278,279,5,108,0,
        0,279,280,5,111,0,0,280,281,5,110,0,0,281,282,5,101,0,0,282,342,
        5,115,0,0,283,284,5,83,0,0,284,285,5,97,0,0,285,286,5,110,0,0,286,
        287,5,100,0,0,287,288,5,237,0,0,288,289,5,97,0,0,289,342,5,115,0,
        0,290,291,5,67,0,0,291,292,5,105,0,0,292,293,5,114,0,0,293,294,5,
        117,0,0,294,295,5,101,0,0,295,296,5,108,0,0,296,297,5,97,0,0,297,
        342,5,115,0,0,298,299,5,68,0,0,299,300,5,117,0,0,300,301,5,114,0,
        0,301,302,5,97,0,0,302,303,5,122,0,0,303,304,5,110,0,0,304,305,5,
        111,0,0,305,342,5,115,0,0,306,307,5,72,0,0,307,308,5,105,0,0,308,
        309,5,103,0,0,309,310,5,111,0,0,310,342,5,115,0,0,311,312,5,80,0,
        0,312,313,5,101,0,0,313,314,5,114,0,0,314,315,5,97,0,0,315,342,5,
        115,0,0,316,317,5,84,0,0,317,318,5,117,0,0,318,319,5,110,0,0,319,
        320,5,97,0,0,320,342,5,115,0,0,321,322,5,77,0,0,322,323,5,97,0,0,
        323,324,5,110,0,0,324,325,5,122,0,0,325,326,5,97,0,0,326,327,5,110,
        0,0,327,328,5,97,0,0,328,342,5,115,0,0,329,330,5,85,0,0,330,331,
        5,118,0,0,331,332,5,97,0,0,332,342,5,115,0,0,333,334,5,71,0,0,334,
        335,5,114,0,0,335,336,5,97,0,0,336,337,5,110,0,0,337,338,5,97,0,
        0,338,339,5,100,0,0,339,340,5,97,0,0,340,342,5,115,0,0,341,211,1,
        0,0,0,341,219,1,0,0,0,341,229,1,0,0,0,341,237,1,0,0,0,341,243,1,
        0,0,0,341,251,1,0,0,0,341,258,1,0,0,0,341,263,1,0,0,0,341,269,1,
        0,0,0,341,276,1,0,0,0,341,283,1,0,0,0,341,290,1,0,0,0,341,298,1,
        0,0,0,341,306,1,0,0,0,341,311,1,0,0,0,341,316,1,0,0,0,341,321,1,
        0,0,0,341,329,1,0,0,0,341,333,1,0,0,0,342,8,1,0,0,0,343,345,7,0,
        0,0,344,343,1,0,0,0,345,346,1,0,0,0,346,344,1,0,0,0,346,347,1,0,
        0,0,347,10,1,0,0,0,348,350,7,1,0,0,349,348,1,0,0,0,350,351,1,0,0,
        0,351,349,1,0,0,0,351,352,1,0,0,0,352,12,1,0,0,0,353,354,7,2,0,0,
        354,14,1,0,0,0,355,357,7,3,0,0,356,355,1,0,0,0,357,358,1,0,0,0,358,
        356,1,0,0,0,358,359,1,0,0,0,359,16,1,0,0,0,360,362,5,13,0,0,361,
        360,1,0,0,0,361,362,1,0,0,0,362,363,1,0,0,0,363,366,5,10,0,0,364,
        366,5,13,0,0,365,361,1,0,0,0,365,364,1,0,0,0,366,18,1,0,0,0,9,0,
        96,209,341,346,351,358,361,365,0
    ]

class WordsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    MONTH = 1
    COLON = 2
    FRUIT_SINGULAR = 3
    FRUIT_PLURAL = 4
    WORD = 5
    NUMBER = 6
    PUNCTUATION = 7
    WHITESPACE = 8
    NEWLINE = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "':'" ]

    symbolicNames = [ "<INVALID>",
            "MONTH", "COLON", "FRUIT_SINGULAR", "FRUIT_PLURAL", "WORD", 
            "NUMBER", "PUNCTUATION", "WHITESPACE", "NEWLINE" ]

    ruleNames = [ "MONTH", "COLON", "FRUIT_SINGULAR", "FRUIT_PLURAL", "WORD", 
                  "NUMBER", "PUNCTUATION", "WHITESPACE", "NEWLINE" ]

    grammarFileName = "Words.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


