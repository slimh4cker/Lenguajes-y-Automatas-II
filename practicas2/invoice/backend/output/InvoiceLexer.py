# Generated from Invoice.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,75,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,1,1,
        1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,6,1,6,1,6,1,7,4,7,52,8,7,11,7,12,7,53,1,8,1,8,4,8,58,
        8,8,11,8,12,8,59,1,9,4,9,63,8,9,11,9,12,9,64,1,10,1,10,1,11,4,11,
        70,8,11,11,11,12,11,71,1,11,1,11,0,0,12,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,23,12,1,0,5,1,0,48,57,6,0,65,90,193,193,
        201,201,205,205,211,211,218,218,8,0,97,122,209,209,225,225,233,233,
        237,237,241,241,243,243,250,250,14,0,65,90,97,122,193,193,201,201,
        205,205,209,209,211,211,218,218,225,225,233,233,237,237,241,241,
        243,243,250,250,3,0,9,10,13,13,32,32,78,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,1,
        25,1,0,0,0,3,27,1,0,0,0,5,29,1,0,0,0,7,31,1,0,0,0,9,34,1,0,0,0,11,
        40,1,0,0,0,13,47,1,0,0,0,15,51,1,0,0,0,17,55,1,0,0,0,19,62,1,0,0,
        0,21,66,1,0,0,0,23,69,1,0,0,0,25,26,5,47,0,0,26,2,1,0,0,0,27,28,
        5,121,0,0,28,4,1,0,0,0,29,30,5,44,0,0,30,6,1,0,0,0,31,32,5,107,0,
        0,32,33,5,103,0,0,33,8,1,0,0,0,34,35,5,112,0,0,35,36,5,105,0,0,36,
        37,5,101,0,0,37,38,5,122,0,0,38,39,5,97,0,0,39,10,1,0,0,0,40,41,
        5,112,0,0,41,42,5,105,0,0,42,43,5,101,0,0,43,44,5,122,0,0,44,45,
        5,97,0,0,45,46,5,115,0,0,46,12,1,0,0,0,47,48,5,100,0,0,48,49,5,101,
        0,0,49,14,1,0,0,0,50,52,7,0,0,0,51,50,1,0,0,0,52,53,1,0,0,0,53,51,
        1,0,0,0,53,54,1,0,0,0,54,16,1,0,0,0,55,57,7,1,0,0,56,58,7,2,0,0,
        57,56,1,0,0,0,58,59,1,0,0,0,59,57,1,0,0,0,59,60,1,0,0,0,60,18,1,
        0,0,0,61,63,7,3,0,0,62,61,1,0,0,0,63,64,1,0,0,0,64,62,1,0,0,0,64,
        65,1,0,0,0,65,20,1,0,0,0,66,67,5,46,0,0,67,22,1,0,0,0,68,70,7,4,
        0,0,69,68,1,0,0,0,70,71,1,0,0,0,71,69,1,0,0,0,71,72,1,0,0,0,72,73,
        1,0,0,0,73,74,6,11,0,0,74,24,1,0,0,0,5,0,53,59,64,71,1,6,0,0
    ]

class InvoiceLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    Y_CONJ = 2
    COMMA = 3
    KG = 4
    PIEZA = 5
    PIEZAS = 6
    DE = 7
    NUMBER = 8
    NOMBRE = 9
    WORD = 10
    DOT = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'/'", "'y'", "','", "'kg'", "'pieza'", "'piezas'", "'de'", 
            "'.'" ]

    symbolicNames = [ "<INVALID>",
            "Y_CONJ", "COMMA", "KG", "PIEZA", "PIEZAS", "DE", "NUMBER", 
            "NOMBRE", "WORD", "DOT", "WS" ]

    ruleNames = [ "T__0", "Y_CONJ", "COMMA", "KG", "PIEZA", "PIEZAS", "DE", 
                  "NUMBER", "NOMBRE", "WORD", "DOT", "WS" ]

    grammarFileName = "Invoice.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


